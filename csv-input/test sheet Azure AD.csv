Repo,FilePath,Single path,Match,Index,Context,BlockType,IsPageGenerated,ms.author
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/faq.yml,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/faq.yml,Revoke-AzureADUserAllRefreshToken,19274,"          I have revoked the refresh token using Microsoft Graph invalidateAllRefreshTokens, or Azure AD PowerShell,  Revoke-AzureADUserAllRefreshToken. Why is Azure AD B2C still accepting the old refresh token?",Sentence,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/faq.yml,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/faq.yml,Revoke-AzureADUserAllRefreshToken,20063,          1. Use PowerShell cmdlet [Revoke-AzureADUserAllRefreshToken](/powershell/module/azuread/revoke-azureaduserallrefreshtoken?view=azureadps-2.0) or Microsoft Graph API [invalidateAllRefreshTokens](/graph/api/user-invalidateallrefreshtokens?tabs=http&view=graph-rest-beta) to run the `RevokeAllRefreshToken` command.,Sentence,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/force-password-reset.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/force-password-reset.md,Set-MsolPasswordPolicy,8667,"The password expiry duration default value is **90** days. The value is configurable by using the [Set-MsolPasswordPolicy](/powershell/module/msonline/set-msolpasswordpolicy) cmdlet from the Azure Active Directory Module for Windows PowerShell. This command updates the tenant, so that all users' passwords expire after number of days you configure.",Sentence,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/manage-custom-policies-powershell.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/manage-custom-policies-powershell.md,Connect-AzureAD,1454,"To work with custom policies in your Azure AD B2C tenant, you first need to connect your PowerShell session to the tenant by using the [Connect-AzureAD][Connect-AzureAD] command.",Sentence,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/manage-custom-policies-powershell.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/manage-custom-policies-powershell.md,Connect-AzureAD,1940,"Connect-AzureAD -Tenant ""{b2c-tenant-name}.onmicrosoft.com""",Code,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/manage-custom-policies-powershell.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/manage-custom-policies-powershell.md,Connect-AzureAD,2076,"PS C:\> Connect-AzureAD -Tenant ""contosob2c.onmicrosoft.com""",Code,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/manage-custom-policies-powershell.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/manage-custom-policies-powershell.md,Connect-AzureAD,9300,[Connect-AzureAD]: /powershell/module/azuread/get-azureadmstrustframeworkpolicy,ReferenceLink,FALSE,pmwongera
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/partner-saviynt.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/partner-saviynt.md,Connect-msolservice,6192,Connect-msolservice #Enter Admin credentials of the Azure portal,Code,FALSE,eunicewaweru
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/partner-saviynt.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/partner-saviynt.md,Get-MsolServicePrincipal,6258,$webApp = Get-MsolServicePrincipal –AppPrincipalId “<ClientId of Azure AD Application>”,Code,FALSE,eunicewaweru
https://github.com/MicrosoftDocs/azure-docs-pr,articles/active-directory-b2c/partner-saviynt.md,https://github.com/MicrosoftDocs/azure-docs-pr/articles/active-directory-b2c/partner-saviynt.md,Add-MsolRoleMember,6347,"Add-MsolRoleMember -RoleName ""Company Administrator"" -RoleMemberType ServicePrincipal -RoleMemberObjectId $webApp.ObjectId",Code,FALSE,eunicewaweru
